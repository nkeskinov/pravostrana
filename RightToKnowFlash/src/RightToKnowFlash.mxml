<?xml version="1.0" encoding="utf-8"?>
<s:Application xmlns:fx="http://ns.adobe.com/mxml/2009"
			   xmlns:s="library://ns.adobe.com/flex/spark"
			   xmlns:mx="library://ns.adobe.com/flex/mx"
			   xmlns:righttoknow="org.most.righttoknow.*"
			   xmlns:components="org.most.righttoknow.components.*"
			   xmlns:municipalitiesservice="services.municipalitiesservice.*"
			   xmlns:ammap="http://www.ammap.com/com_internal"
			   xmlns:categoriesservice="services.categoriesservice.*"
			   width="600" height="430" applicationComplete="init()" horizontalCenter="0"
			   verticalCenter="0" xmlns:controls="org.most.righttoknow.controls.*">
	<fx:Script> 
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.collections.ArrayList;
			import mx.collections.XMLListCollection;
			import mx.controls.Alert;
			import mx.controls.Menu;
			import mx.events.FlexEvent;
			import mx.events.MenuEvent;
			import mx.events.SliderEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			
			
			import org.most.righttoknow.components.HelpTitleWindow;
			import org.most.righttoknow.components.ShareTitleWindow;
			import org.osmf.events.TimeEvent;
			
			
			import services.municipalitiesservice.MunicipalitiesService;
			
			[Bindable]
			private var fullScreenState:String;
			
			
			[Bindable]
			protected var allCities:ArrayCollection;
			
			
			private function init():void {
				fullScreenState = stage.displayState;
				stage.addEventListener(FullScreenEvent.FULL_SCREEN, stage_fullScreen);		
				allCities = new ArrayCollection();
			}
			
			protected function list_creationCompleteHandler(event:FlexEvent):void
			{
				getAllMunicipalitiesResult.token = municipalitiesService.getAllMunicipalities();
			}
			
		
			
			protected function bubbleSizeHSlider_changeHandler(event:SliderEvent):void
			{
				
				bubblechart.setBulletSize(bubbleSizeHSlider.value);
			}
					
			/* protected function timelineSlider_changeHandler(event:SliderEvent):void
			{
				bubblechart.getBubbleEntriesByIds(1,2,timelineSlider.value);
			}
			 */
			protected function fullScreenBtn_clickHandler(event:MouseEvent):void
			{
				if (isFullScreen()) {
					fullScreenState = StageDisplayState.NORMAL;
				} else {
					fullScreenState = StageDisplayState.FULL_SCREEN;
					this.percentWidth = 100;
					this.percentHeight = 100;
				}
				
				try {
					stage.displayState = fullScreenState;
				} catch (any:*) {
					// ignore
				}
				
			}
			
			private function isFullScreen():Boolean {
				return (stage.displayState == StageDisplayState.FULL_SCREEN);
			}
			
			private function stage_fullScreen(evt:FullScreenEvent):void {
				fullScreenBtn.selected = isFullScreen();
			}
			
			protected function helpBtn_clickHandler(event:MouseEvent):void
			{ 
				
				var titleWindowInstance:HelpTitleWindow = HelpTitleWindow(PopUpManager.createPopUp(this, HelpTitleWindow, false));
				
				PopUpManager.centerPopUp(titleWindowInstance);
			}
			
			protected function shareBtn_clickHandler(event:MouseEvent):void
			{
				var titleWindowInstance:ShareTitleWindow = ShareTitleWindow(PopUpManager.createPopUp(this, ShareTitleWindow, false));
				
				PopUpManager.centerPopUp(titleWindowInstance);
			}
			
			
			protected function checkAllCities_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				
				if(checkAllCities.selected){
					for(var i:int=0; i<allCities.length; i++){
						allCities.getItemAt(i).isSelected = true;
						
					}
				}else{
					for(var i:int=0; i<allCities.length; i++){
						allCities.getItemAt(i).isSelected = false;
					}
				}
				
				list.dataProvider = allCities;
				
			}
			
			protected function getAllMunicipalitiesResult_resultHandler(event:ResultEvent):void
			{
				// TODO Auto-generated method stub
				var tmpArray:ArrayCollection = getAllMunicipalitiesResult.lastResult;
				
				for each(var item:Object in tmpArray){
					
					var o:Object = {label:item.name, dataField:item.id_municipality, isSelected:false};
					allCities.addItem(o);
				}
				
				//allCities=getAllMunicipalitiesResult.lastResult;
			}
			
		
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:CallResponder id="getAllMunicipalitiesResult" result="getAllMunicipalitiesResult_resultHandler(event)"/>
		
		<municipalitiesservice:MunicipalitiesService id="municipalitiesService"
													 fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
													 showBusyCursor="true"/>
		<s:CallResponder id="getCategoriesByAxesResult"/>
		
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:BorderContainer width="100%" height="100%" horizontalCenter="0" verticalCenter="0">
		
		<s:HGroup left="10" right="10" top="10" bottom="10" gap="3" width="100%" height="100%">
			<s:VGroup height="100%" gap="3" width="100%">
				<mx:TabNavigator width="100%" height="100%" paddingBottom="0" paddingLeft="0" paddingRight="0">
					<s:NavigatorContent width="100%" height="100%" label="Графикон">
						<s:Group width="100%" height="100%" top="-10">
							<components:BubbleChartCustomComponent  id="bubblechart" x="0">
							</components:BubbleChartCustomComponent>
						</s:Group>
						<!--<s:Label id="yearLbl" color="#ADADAD" fontSize="128" fontWeight="bold"
								 horizontalCenter="0" text="{timelineSlider.value}"
								 verticalCenter="4" textAlpha="0.35"  /> -->
					</s:NavigatorContent>
					<s:NavigatorContent width="100%" height="100%" label="Мапа">
						<s:Group width="100%" height="100%" top="-10">
							<components:MapChartComponent x="5" width="100%" height="100%" horizontalCenter="0">
							</components:MapChartComponent>
						</s:Group>
						<!--<s:Label id="yearLbl0" right="40" bottom="5" color="#ADADAD" fontSize="48"
								 fontWeight="bold" text="{timelineSlider.value}" textAlpha="0.35"/>-->
					</s:NavigatorContent>
					
				</mx:TabNavigator>
			</s:VGroup>
			
			<s:VGroup width="155" height="100%" gap="3">
				<s:Panel width="100%" height="85%" dropShadowVisible="false" fontSize="11"
						 fontWeight="normal" skinClass="org.most.righttoknow.skins.PanelSkin"
						 title="Градови">
					
					<mx:List id="list" y="0" width="100%" height="100%" borderVisible="false"
							 creationComplete="list_creationCompleteHandler(event)"
							 dataProvider="{allCities}"
							 fontSize="10" horizontalCenter="0"
							 labelField="label" paddingBottom="0" paddingLeft="0" paddingTop="0" >
						<mx:itemRenderer>
							<fx:Component>
								<mx:CheckBox label="{data.label}" change="onChange(event);" paddingLeft="5" selected="{data.isSelected}">
									<fx:Script>
										<![CDATA[
											import mx.controls.Alert;
											private function onChange(evt:Event):void {	
												Alert.show("Item clicked="+data.label +" id="+data.dataField);
												
											}
											
										]]>
									</fx:Script>
								
								</mx:CheckBox>
							</fx:Component>
						</mx:itemRenderer> 
					</mx:List>
					<s:CheckBox id="checkAllCities" x="5" y="-19"
								click="checkAllCities_clickHandler(event)"/>
				</s:Panel>
				<s:Panel width="100%" height="15%" dropShadowVisible="false"
						 skinClass="org.most.righttoknow.skins.PanelSkin" title="Големина">
					<s:VGroup left="0" top="0" bottom="0" width="100%">
						<mx:HSlider id="bubbleSizeHSlider" width="150"
									allowTrackClick="true"
									change="bubbleSizeHSlider_changeHandler(event)"
									labels="[0, 10, 20, 30, 40 , 50]" liveDragging="true"
									maximum="50" minimum="5" snapInterval="5" value="10"/>
					</s:VGroup>
				</s:Panel>
				
			</s:VGroup> 
		</s:HGroup>
		<s:HGroup y="10" right="168" width="249" height="22" gap="2" horizontalAlign="right">
			<s:Button id="helpBtn" label="Помош" click="helpBtn_clickHandler(event)" fontSize="11"
					  icon="@Embed(source='assets/help.png')"/>  
			<mx:Button id="shareBtn" label="Сподели" click="shareBtn_clickHandler(event)"
					   fontSize="11" icon="@Embed(source='assets/share2.png')" paddingLeft="5"
					   paddingRight="5"/>
			<s:ToggleButton  id="fullScreenBtn" width="21" height="21"
					  click="fullScreenBtn_clickHandler(event)"
					  icon="@Embed(source='assets/full_screen.png')"/>
		</s:HGroup>
	</s:BorderContainer>
</s:Application>
